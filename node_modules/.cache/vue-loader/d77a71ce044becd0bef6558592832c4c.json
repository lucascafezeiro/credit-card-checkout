{"remainingRequest":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\src\\components\\VSelectInput.vue?vue&type=style&index=0&id=5ad5ba08&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\src\\components\\VSelectInput.vue","mtime":1567491193895},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n\r\n.select-input-container{\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.input {\r\n    float: left;\r\n}\r\n\r\n.icon {\r\n    float: left;\r\n    margin-left: -7pt;\r\n    margin-bottom: 2px;\r\n}\r\n\r\n.dropdownlist-container {\r\n    position: relative;\r\n}\r\n\r\n.dropdownlist {\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n    top:-12px;\r\n\tleft: 0px;\r\n\twidth: 100%;\r\n\tbackground-color: rgb(17, 28, 44);\r\n}\r\n\r\n.dropdownlist-item {\r\n    cursor: pointer;\r\n    text-align: center;\r\n    margin-top: 1px;\r\n    font-size: 13px;\r\n}\r\n\r\n.dropdownlist-item:hover {\r\n    background-color: rgb(20, 40, 70);\r\n}\r\n\r\n.active {\r\n    background-color: rgb(20, 40, 70);\r\n}\r\n\r\n::-webkit-scrollbar {\r\n    width: 12px;\r\n}\r\n  \r\n::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 10px;\r\n    border-radius: 10px;\r\n    background: rgba(12, 20, 46, 0.8); \r\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \r\n}\r\n\r\n",{"version":3,"sources":["VSelectInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"VSelectInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"select-input-container\">\r\n            <VInputText\r\n                class=\"input\"\r\n                v-bind:label=\"label\"\r\n                v-bind:value=\"currentValue\"\r\n                v-bind:name=\"name\"\r\n                v-on:focus=\"openList\"\r\n                v-on:blur=\"closeList\"\r\n                v-on:input=\"onInput\"\r\n                v-on:arrow-down=\"changeItem('down')\"\r\n                v-on:arrow-up=\"changeItem('up')\"\r\n                v-on:enter=\"closeList\"\r\n                v-bind:error=\"error\"\r\n            />\r\n            <div class=\"icon\">â–¼</div>\r\n        </div>        \r\n        <div class=\"dropdownlist-container\">\r\n            <div \r\n                class=\"dropdownlist\" \r\n                v-bind:style=\"[overrideStyles]\"\r\n            >\r\n                <div \r\n                    class=\"dropdownlist-item\"\r\n                    v-for=\"item in this.currentList\"\r\n                    v-bind:key=\"item.value\"\r\n                    v-on:mousedown=\"selectItem(item.value)\"\r\n                    v-bind:class=\"{ active: item.isActive }\"\r\n                >\r\n                    {{item.value}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport VInputText from './VInputText'\r\n\r\nexport default {\r\n    name: 'VSelectInput',\r\n    components: {\r\n        VInputText\r\n    },\r\n    data () {\r\n        return {\r\n            overrideStyles : {\r\n                display: 'none'\r\n            },\r\n            currentStart: 0,\r\n            currentValue: '',\r\n            currentKey: -1,\r\n            currentList: [{\r\n                value: '',\r\n                isActive: false\r\n            }]\r\n        }\r\n    },\r\n    props: {\r\n        value : {\r\n            type: String,\r\n            required: false\r\n        },\r\n        name : {\r\n            type: String,\r\n            required: true\r\n        },\r\n        label : {\r\n            type: String,\r\n            required: true\r\n        },\r\n        items : {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        size : {\r\n            type: Number,\r\n            required: false,\r\n            default: 4\r\n        },\r\n        error: {\r\n            type: Object,\r\n            required: false,\r\n            default () { \r\n                return {\r\n                    hasError: false,\r\n                    message: ''\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods : {\r\n        openList () {\r\n            this.overrideStyles.display = 'block';\r\n        },\r\n        closeList () {\r\n            this.overrideStyles.display = 'none';\r\n        },\r\n        onInput (input) {\r\n            this.currentStart = this.items.findIndex((item) => (item.substring(0,input.value.length) === input.value));\r\n            if (this.currentStart === -1) {\r\n                this.closeList();\r\n            } else {\r\n                this.openList();\r\n                this.currentValue = input.value;\r\n                this.currentKey = 0;\r\n                this.updateCurrentList();\r\n                this.currentList[this.currentKey].isActive = true;\r\n            }\r\n            this.$emit('input', {key: this.name, value: input.value});\r\n        },\r\n        updateCurrentList () {\r\n            this.currentList = [];\r\n            for (let i = this.currentStart; ( (i < this.items.length) && (i < (this.size+this.currentStart)) ) ;i++){\r\n                this.currentList.push({value: this.items[i], isActive: false});\r\n            }\r\n        },\r\n        selectItem(item) {\r\n            this.currentValue = item;\r\n            this.$emit('input', {key: this.name, value: item});\r\n        },\r\n        changeItem(event) {\r\n            const IS_LAST_ITEM_CURRENT_LISTA = ((this.currentKey+1) % this.size === 0) && (this.currentKey >= 0);\r\n            const IS_LAST_ITEM_ALL_LISTA = (this.currentValue === this.items[this.items.length-1]);\r\n            const IS_FIRST_ITEM_ALL_LISTA = (this.currentValue === this.items[0]);\r\n\r\n            if (this.currentKey > -1) {\r\n                this.currentList[this.currentKey].isActive = false;\r\n            }\r\n\r\n            if (event == 'down') {\r\n                if (!IS_LAST_ITEM_ALL_LISTA) {\r\n                    if ( IS_LAST_ITEM_CURRENT_LISTA ) {\r\n                        this.currentStart++;\r\n                        this.updateCurrentList();\r\n                    } else if (this.currentKey < this.items.length-1) {\r\n                        this.currentKey++;\r\n                    }\r\n                }\r\n            } else if (event == 'up') {\r\n                if (this.currentKey === 0) {\r\n                    if (!IS_FIRST_ITEM_ALL_LISTA) {\r\n                        this.currentStart--;\r\n                        this.updateCurrentList();\r\n                    }\r\n                } else {\r\n                    this.currentKey--;\r\n                } \r\n            }\r\n            this.currentList[this.currentKey].isActive = true;\r\n            this.currentValue = this.currentList[this.currentKey].value;\r\n        }\r\n    },\r\n    beforeMount () {\r\n        this.currentValue = this.value;\r\n        this.updateCurrentList();\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.select-input-container{\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.input {\r\n    float: left;\r\n}\r\n\r\n.icon {\r\n    float: left;\r\n    margin-left: -7pt;\r\n    margin-bottom: 2px;\r\n}\r\n\r\n.dropdownlist-container {\r\n    position: relative;\r\n}\r\n\r\n.dropdownlist {\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n    top:-12px;\r\n\tleft: 0px;\r\n\twidth: 100%;\r\n\tbackground-color: rgb(17, 28, 44);\r\n}\r\n\r\n.dropdownlist-item {\r\n    cursor: pointer;\r\n    text-align: center;\r\n    margin-top: 1px;\r\n    font-size: 13px;\r\n}\r\n\r\n.dropdownlist-item:hover {\r\n    background-color: rgb(20, 40, 70);\r\n}\r\n\r\n.active {\r\n    background-color: rgb(20, 40, 70);\r\n}\r\n\r\n::-webkit-scrollbar {\r\n    width: 12px;\r\n}\r\n  \r\n::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 10px;\r\n    border-radius: 10px;\r\n    background: rgba(12, 20, 46, 0.8); \r\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \r\n}\r\n\r\n</style>"]}]}