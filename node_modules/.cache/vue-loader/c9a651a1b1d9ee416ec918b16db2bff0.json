{"remainingRequest":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\src\\components\\CreditCardChekout.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\src\\components\\CreditCardChekout.vue","mtime":1567496100276},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport VShoppingCartPanel from './VShoppingCartPanel';\r\nimport PaymentPanel from './PaymentPanel';\r\nimport VMessageBox from './VMessageBox';\r\n\r\nexport default {\r\n  name: 'app',\r\n  components: {\r\n    VShoppingCartPanel,\r\n    PaymentPanel,\r\n    VMessageBox\r\n  },\r\n  data () {\r\n    return {\r\n        status : 'none',\r\n        purchaseData : {\r\n            shoppingCartData: {\r\n            shoppingCartItems: [\r\n                {\r\n                    id: 1,\r\n                    product: {\r\n                        pictureUrl: require('../assets/imgs/product1.gif'),\r\n                        description: 'T-short Girl Power',\r\n                        price: 28.55,\r\n                        size: 'S',\r\n                        color: 'Burgundy',\r\n                        totalStock: 10\r\n                    },\r\n                    quantity: 2,\r\n                    totalPrice: 57.10\r\n                },\r\n                {\r\n                    id: 2,\r\n                    product: {\r\n                        pictureUrl: require('../assets/imgs/product2.gif'),\r\n                        description: '2019 Fashion',\r\n                        price: 30.50,\r\n                        size: 'S',\r\n                        color: 'Black, blue, white',\r\n                        totalStock: 10\r\n                    },\r\n                    quantity: 2,\r\n                    totalPrice: 61.00\r\n                },\r\n                {\r\n                    id: 3,\r\n                    product: {\r\n                        pictureUrl: require('../assets/imgs/product3.gif'),\r\n                        description: 'New Women',\r\n                        price: 40.00,\r\n                        size: 'S',\r\n                        color: 'pink',\r\n                        totalStock: 10\r\n                    },\r\n                    quantity: 2,\r\n                    totalPrice: 80.00\r\n                }\r\n            ],\r\n            orderTotal: 0\r\n            },\r\n            paymentData: {}\r\n        }\r\n    }\r\n  },\r\n  methods: {\r\n    submitOrder (paymentData) {\r\n        this.purchaseData.paymentData = paymentData;\r\n        this.status = 'waiting'\r\n    },\r\n    changeStatus  (status) {\r\n        this.status = status\r\n    },\r\n    incrementItemQuantity (id) {\r\n      let index = this.purchaseData.shoppingCartData.shoppingCartItems.findIndex(\r\n        (item) => (item.id === id)\r\n      )\r\n      if (this.purchaseData.shoppingCartData.shoppingCartItems[index].quantity < \r\n          this.purchaseData.shoppingCartData.shoppingCartItems[index].product.totalStock\r\n      ) {\r\n        this.purchaseData.shoppingCartData.shoppingCartItems[index].quantity++;\r\n        this.updateTotalPriceItem(index);\r\n        this.updateOrderTotal();\r\n      }\r\n    },\r\n    decrementItemQuantity (id) {\r\n      let index = this.purchaseData.shoppingCartData.shoppingCartItems.findIndex(\r\n        (item) => (item.id === id)\r\n      )\r\n      if (this.purchaseData.shoppingCartData.shoppingCartItems[index].quantity > 1) {\r\n        this.purchaseData.shoppingCartData.shoppingCartItems[index].quantity--;\r\n        this.updateTotalPriceItem(index);\r\n        this.updateOrderTotal();\r\n      }\r\n    },\r\n    removeShoppingCartItem (id) {\r\n      this.purchaseData.shoppingCartData.shoppingCartItems = \r\n        this.purchaseData.shoppingCartData.shoppingCartItems.filter( (item) => (item.id) !== id );\r\n      this.updateOrderTotal();\r\n    },\r\n    updateOrderTotal () {\r\n      this.purchaseData.shoppingCartData.orderTotal = \r\n        this.purchaseData.shoppingCartData.shoppingCartItems.reduce(\r\n          (sum, item) => {\r\n              return ( sum + Number( item.product.price * item.quantity) );\r\n          },0\r\n        ).toFixed(2);\r\n    },\r\n    updateTotalPriceItem (index) {\r\n      this.purchaseData.shoppingCartData.shoppingCartItems[index].totalPrice = \r\n        this.purchaseData.shoppingCartData.shoppingCartItems[index].quantity *\r\n        this.purchaseData.shoppingCartData.shoppingCartItems[index].product.price;\r\n    }\r\n  },\r\n  mounted () {\r\n    this.updateOrderTotal();\r\n  }\r\n}\r\n",{"version":3,"sources":["CreditCardChekout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreditCardChekout.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"shopping-cart-container\">\r\n            <VShoppingCartPanel \r\n                v-bind:shoppingCartData=\"purchaseData.shoppingCartData\"\r\n                v-on:incrementItemQuantity=\"incrementItemQuantity\"\r\n                v-on:decrementItemQuantity=\"decrementItemQuantity\"\r\n                v-on:removeItem=\"removeShoppingCartItem\"\r\n            />\r\n        </div>\r\n        <div class=\"payment-panel-container\">\r\n            <PaymentPanel \r\n                v-bind:purchaseData=\"purchaseData\"\r\n                v-on:incrementItemQuantity=\"incrementItemQuantity\"\r\n                v-on:decrementItemQuantity=\"decrementItemQuantity\"\r\n                v-on:removeItem=\"removeShoppingCartItem\"\r\n                v-on:submit=\"submitOrder\"\r\n            />\r\n        </div>\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport VShoppingCartPanel from './VShoppingCartPanel';\r\nimport PaymentPanel from './PaymentPanel';\r\nimport VMessageBox from './VMessageBox';\r\n\r\nexport default {\r\n  name: 'app',\r\n  components: {\r\n    VShoppingCartPanel,\r\n    PaymentPanel,\r\n    VMessageBox\r\n  },\r\n  data () {\r\n    return {\r\n        status : 'none',\r\n        purchaseData : {\r\n            shoppingCartData: {\r\n            shoppingCartItems: [\r\n                {\r\n                    id: 1,\r\n                    product: {\r\n                        pictureUrl: require('../assets/imgs/product1.gif'),\r\n                        description: 'T-short Girl Power',\r\n                        price: 28.55,\r\n                        size: 'S',\r\n                        color: 'Burgundy',\r\n                        totalStock: 10\r\n                    },\r\n                    quantity: 2,\r\n                    totalPrice: 57.10\r\n                },\r\n                {\r\n                    id: 2,\r\n                    product: {\r\n                        pictureUrl: require('../assets/imgs/product2.gif'),\r\n                        description: '2019 Fashion',\r\n                        price: 30.50,\r\n                        size: 'S',\r\n                        color: 'Black, blue, white',\r\n                        totalStock: 10\r\n                    },\r\n                    quantity: 2,\r\n                    totalPrice: 61.00\r\n                },\r\n                {\r\n                    id: 3,\r\n                    product: {\r\n                        pictureUrl: require('../assets/imgs/product3.gif'),\r\n                        description: 'New Women',\r\n                        price: 40.00,\r\n                        size: 'S',\r\n                        color: 'pink',\r\n                        totalStock: 10\r\n                    },\r\n                    quantity: 2,\r\n                    totalPrice: 80.00\r\n                }\r\n            ],\r\n            orderTotal: 0\r\n            },\r\n            paymentData: {}\r\n        }\r\n    }\r\n  },\r\n  methods: {\r\n    submitOrder (paymentData) {\r\n        this.purchaseData.paymentData = paymentData;\r\n        this.status = 'waiting'\r\n    },\r\n    changeStatus  (status) {\r\n        this.status = status\r\n    },\r\n    incrementItemQuantity (id) {\r\n      let index = this.purchaseData.shoppingCartData.shoppingCartItems.findIndex(\r\n        (item) => (item.id === id)\r\n      )\r\n      if (this.purchaseData.shoppingCartData.shoppingCartItems[index].quantity < \r\n          this.purchaseData.shoppingCartData.shoppingCartItems[index].product.totalStock\r\n      ) {\r\n        this.purchaseData.shoppingCartData.shoppingCartItems[index].quantity++;\r\n        this.updateTotalPriceItem(index);\r\n        this.updateOrderTotal();\r\n      }\r\n    },\r\n    decrementItemQuantity (id) {\r\n      let index = this.purchaseData.shoppingCartData.shoppingCartItems.findIndex(\r\n        (item) => (item.id === id)\r\n      )\r\n      if (this.purchaseData.shoppingCartData.shoppingCartItems[index].quantity > 1) {\r\n        this.purchaseData.shoppingCartData.shoppingCartItems[index].quantity--;\r\n        this.updateTotalPriceItem(index);\r\n        this.updateOrderTotal();\r\n      }\r\n    },\r\n    removeShoppingCartItem (id) {\r\n      this.purchaseData.shoppingCartData.shoppingCartItems = \r\n        this.purchaseData.shoppingCartData.shoppingCartItems.filter( (item) => (item.id) !== id );\r\n      this.updateOrderTotal();\r\n    },\r\n    updateOrderTotal () {\r\n      this.purchaseData.shoppingCartData.orderTotal = \r\n        this.purchaseData.shoppingCartData.shoppingCartItems.reduce(\r\n          (sum, item) => {\r\n              return ( sum + Number( item.product.price * item.quantity) );\r\n          },0\r\n        ).toFixed(2);\r\n    },\r\n    updateTotalPriceItem (index) {\r\n      this.purchaseData.shoppingCartData.shoppingCartItems[index].totalPrice = \r\n        this.purchaseData.shoppingCartData.shoppingCartItems[index].quantity *\r\n        this.purchaseData.shoppingCartData.shoppingCartItems[index].product.price;\r\n    }\r\n  },\r\n  mounted () {\r\n    this.updateOrderTotal();\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n.payment-panel-container {\r\n   z-index: 5;\r\n}\r\n\r\n@media screen and (max-width: 900px) {\r\n  .shopping-cart-container {\r\n    visibility: hidden;\r\n    display: none;\r\n  }\r\n}\r\n  \r\n</style>\r\n"]}]}