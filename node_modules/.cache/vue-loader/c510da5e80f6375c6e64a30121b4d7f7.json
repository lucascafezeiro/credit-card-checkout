{"remainingRequest":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\src\\components\\VShoppingCartItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\src\\components\\VShoppingCartItem.vue","mtime":1567237640758},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567196258488},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\babel-loader\\lib\\index.js","mtime":1567196216636},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567196258488},{"path":"C:\\Users\\Lucas\\projects\\AlayaCare test\\credit-card-checkout\\node_modules\\vue-loader\\lib\\index.js","mtime":1567196260533}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport NumberInput from './NumberInput'\r\n\r\nexport default {\r\n    name: 'VShoppingCartItem',\r\n    components: {\r\n        NumberInput\r\n    },\r\n    data () {\r\n        return {\r\n            totalPrice: (this.shoppingCartItem.product.price * this.shoppingCartItem.quantity).toFixed(2)\r\n        }\r\n    },\r\n    props: {\r\n        shoppingCartItem: {\r\n            product: {\r\n                id: {\r\n                    type: Number,\r\n                    require: true\r\n                },\r\n                pictureUrl: {\r\n                    type: String,\r\n                    require: true\r\n                },\r\n                description: {\r\n                    type: String,\r\n                    require: true\r\n                },\r\n                price: {\r\n                    type: Number,\r\n                    require: true\r\n                },\r\n                size: {\r\n                    type: String,\r\n                    require: true\r\n                },\r\n                color: {\r\n                    type: String,\r\n                    require: true\r\n                },\r\n                totalStock: {\r\n                    type: Number,\r\n                    require: true\r\n                },\r\n            },\r\n            quantity: {\r\n                type: Number,\r\n                require: true\r\n            },\r\n        }\r\n    },\r\n    methods: {\r\n        decrementQuantity: function () {\r\n            if (this.shoppingCartItem.quantity > 1) {\r\n                this.shoppingCartItem.quantity--;\r\n            }\r\n        },\r\n        incrementQuantity: function (quantityAvailable) {\r\n            if (this.shoppingCartItem.quantity < quantityAvailable) {\r\n                this.shoppingCartItem.quantity++;\r\n            } else  {\r\n                // todo: message out of the limit\r\n            }\r\n        }\r\n    },\r\n    updated() {\r\n        this.totalPrice = (this.shoppingCartItem.product.price * this.shoppingCartItem.quantity).toFixed(2);\r\n        this.$emit('updateTotal', {id: this.id, totalPrice: this.totalPrice});\r\n    }\r\n}\r\n",{"version":3,"sources":["VShoppingCartItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VShoppingCartItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"shopping-cart-list-item\">\r\n        <div class=\"product-picture-container\">\r\n            <img v-bind:src=\"shoppingCartItem.product.pictureUrl\" class=\"product-picture\">\r\n        </div>\r\n        <div class=\"shopping-cart-list-item-descriptions\">\r\n            <div class=\"product-description\">\r\n                {{shoppingCartItem.product.description}}\r\n            </div>\r\n            <div class=\"product-unit-price\">\r\n                {{shoppingCartItem.product.price}}\r\n            </div>\r\n            <div class=\"product-detail\">\r\n                Size: {{shoppingCartItem.product.size}}\r\n            </div>\r\n            <div class=\"product-detail\">\r\n                Color: {{shoppingCartItem.product.color}}\r\n            </div>\r\n        </div>\r\n        <div class=\"quantity\">\r\n            <NumberInput  \r\n                v-bind:value=\"shoppingCartItem.quantity\" \r\n                v-on:decrement=\"decrementQuantity\" \r\n                v-on:increment=\"incrementQuantity(shoppingCartItem.product.totalStock)\" \r\n            />\r\n        </div>\r\n        <div class=\"product-total-price\">\r\n            $ {{ totalPrice }}\r\n        </div>\r\n        <div class=\"x-remove-container\">\r\n            <div v-on:click=\"$emit('removeItem', shoppingCartItem.id)\" class=\"x-remove\" > X </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport NumberInput from './NumberInput'\r\n\r\nexport default {\r\n    name: 'VShoppingCartItem',\r\n    components: {\r\n        NumberInput\r\n    },\r\n    data () {\r\n        return {\r\n            totalPrice: (this.shoppingCartItem.product.price * this.shoppingCartItem.quantity).toFixed(2)\r\n        }\r\n    },\r\n    props: {\r\n        shoppingCartItem: {\r\n            product: {\r\n                id: {\r\n                    type: Number,\r\n                    require: true\r\n                },\r\n                pictureUrl: {\r\n                    type: String,\r\n                    require: true\r\n                },\r\n                description: {\r\n                    type: String,\r\n                    require: true\r\n                },\r\n                price: {\r\n                    type: Number,\r\n                    require: true\r\n                },\r\n                size: {\r\n                    type: String,\r\n                    require: true\r\n                },\r\n                color: {\r\n                    type: String,\r\n                    require: true\r\n                },\r\n                totalStock: {\r\n                    type: Number,\r\n                    require: true\r\n                },\r\n            },\r\n            quantity: {\r\n                type: Number,\r\n                require: true\r\n            },\r\n        }\r\n    },\r\n    methods: {\r\n        decrementQuantity: function () {\r\n            if (this.shoppingCartItem.quantity > 1) {\r\n                this.shoppingCartItem.quantity--;\r\n            }\r\n        },\r\n        incrementQuantity: function (quantityAvailable) {\r\n            if (this.shoppingCartItem.quantity < quantityAvailable) {\r\n                this.shoppingCartItem.quantity++;\r\n            } else  {\r\n                // todo: message out of the limit\r\n            }\r\n        }\r\n    },\r\n    updated() {\r\n        this.totalPrice = (this.shoppingCartItem.product.price * this.shoppingCartItem.quantity).toFixed(2);\r\n        this.$emit('updateTotal', {id: this.id, totalPrice: this.totalPrice});\r\n    }\r\n}\r\n</script>\r\n\r\n<style scope>\r\n\r\n.shopping-cart-list-item {\r\n    height: 17.5%;\r\n    width: 100%;\r\n    margin-bottom: 1%;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.shopping-cart-list-item-descriptions{\r\n    float: left;\r\n    margin-left: 10%;\r\n    width: 47%;\r\n    height: 100%;\r\n}\r\n\r\n.product-picture-container{\r\n    float: left;\r\n}\r\n\r\n.product-picture{\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 2px;\r\n}\r\n\r\n.product-description{\r\n    font-size: 0.8em;\r\n    color: #555;\r\n}\r\n\r\n.product-unit-price{\r\n    font-size: 0.6em;\r\n    color: #999;\r\n}\r\n\r\n.product-detail{\r\n    font-size: 0.5em;\r\n    color: #999;\r\n}\r\n\r\n.quantity {\r\n    font-size: 0.8em;\r\n    width: 15%;\r\n    float: left;\r\n}\r\n\r\n.quantity-item {\r\n    float: left;\r\n    color: #555;\r\n\r\n}\r\n\r\n.product-total-price {\r\n    font-size: 0.8em;\r\n    float: left;\r\n    color: #555;\r\n    padding-left: 7%;\r\n    width: 22%;\r\n}\r\n\r\n.x-remove-container{\r\n    font-size: 0.8em;\r\n    float: left;\r\n    color: #999;\r\n    width: 15%;\r\n    text-align: right;\r\n}\r\n\r\n.x-remove {\r\n    cursor: pointer;\r\n}\r\n\r\n</style>"]}]}